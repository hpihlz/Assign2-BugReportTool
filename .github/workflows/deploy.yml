name: Build & Deploy to Azure Container Apps (OIDC)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  RESOURCE_GROUP: Assign2-BugReportTool-RG
  ACR_NAME: assign2bugreportregistry
  IMAGE_NAME: bugreporttool
  CONTAINER_APP_NAME: bugreporttool-app
  CONTAINERAPPS_ENV: bugreporttool-env

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get ACR login server
        id: acr
        run: |
          ACR_LOGIN_SERVER=$(az acr show -n "$ACR_NAME" -g "$RESOURCE_GROUP" --query loginServer -o tsv)
          echo "login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: ACR Login (via OIDC RBAC)
        run: az acr login -n "$ACR_NAME"

      - name: Build & Push image (single push, two tags, no attestations)
        env:
          ACR_LOGIN_SERVER: ${{ steps.acr.outputs.login_server }}
        run: |
          set -e
          IMAGE_TAG=${GITHUB_SHA::12}
          FULL_IMAGE="${ACR_LOGIN_SERVER}/${IMAGE_NAME}:${IMAGE_TAG}"
          LATEST_IMAGE="${ACR_LOGIN_SERVER}/${IMAGE_NAME}:latest"
          echo "Building and pushing:"
          echo " - $FULL_IMAGE"
          echo " - $LATEST_IMAGE"
          for attempt in 1 2 3; do
            echo "Attempt $attempt ..."
            docker buildx build \
              --platform linux/amd64 \
              --provenance=false \
              --sbom=false \
              -t "$FULL_IMAGE" \
              -t "$LATEST_IMAGE" \
              --push \
              . && break
            sleep 5
          done
          echo "FULL_IMAGE=$FULL_IMAGE" >> $GITHUB_ENV

      - name: Ensure containerapp extension
        run: az extension add --name containerapp --upgrade -y

      - name: Bind ACR to Container App (idempotent)
        run: |
          az containerapp registry set \
            -g "$RESOURCE_GROUP" \
            -n "$CONTAINER_APP_NAME" \
            --server "${{ steps.acr.outputs.login_server }}" \
            --identity system

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            -n "$CONTAINER_APP_NAME" \
            -g "$RESOURCE_GROUP" \
            --image "$FULL_IMAGE"
          echo "Deployed image: $FULL_IMAGE"
